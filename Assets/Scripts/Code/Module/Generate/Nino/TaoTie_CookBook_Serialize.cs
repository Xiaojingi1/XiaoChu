/* this is generated by nino */
namespace TaoTie
{
    public partial class CookBook
    {
        public static CookBook.SerializationHelper NinoSerializationHelper = new CookBook.SerializationHelper();
        public class SerializationHelper: Nino.Serialization.NinoWrapperBase<CookBook>
        {
            #region NINO_CODEGEN
            public override void Serialize(CookBook value, Nino.Serialization.Writer writer)
            {
                if(value == null)
                {
                    writer.Write(false);
                    return;
                }
                writer.Write(true);
                writer.CompressAndWrite(value.Id);
                writer.Write(value.name);
                if(value.Batching != null)
                {
                    writer.Write(true);
                    writer.CompressAndWrite(value.Batching.Length);
                    foreach (var entry in value.Batching)
                    {
                        writer.CompressAndWrite(entry);
                    }
                }
                else
                {
                    writer.Write(false);
                }
            }

            public override CookBook Deserialize(Nino.Serialization.Reader reader)
            {
                if(!reader.ReadBool())
                    return null;
                CookBook value = new CookBook();
                value.Id = reader.DecompressAndReadNumber<System.Int32>();
                value.name = reader.ReadString();
                if(reader.ReadBool()){value.Batching = new System.Int32[reader.ReadLength()];
                for(int i = 0, cnt = value.Batching.Length; i < cnt; i++)
                {
                    var value_Batching_i = reader.DecompressAndReadNumber<System.Int32>();;
                    value.Batching[i] = value_Batching_i;
                }}
                return value;
            }
            #endregion
        }
    }
}